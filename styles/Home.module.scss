@mixin sp-layout {
    @media screen and (max-width: 750px) {
        @content;
    }
}

.styledBackground {
    z-index: 5;
    backdrop-filter: blur(12px);
}

@function random_range($min, $max) {
    $rand: random();
    $random_range: $min + floor($rand * (($max - $min) + 1));
    @return $random_range;
}

.stars {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 125%;
    transform: rotate(-45deg);
    pointer-events: none; // Prevents the element from blocking mouse events
    z-index: -1; // Ensure it's in the background
}

.star {
    $star-count: 32; // Reduce the number of stars
    --star-color: var(--primary-color);
    --star-tail-length: 4em; // Reduced tail length
    --star-tail-height: 1px; // Reduced tail height
    --star-width: calc(var(--star-tail-length) / 6);
    --fall-duration: 18s;
    --tail-fade-duration: var(--fall-duration);

    position: absolute;
    top: var(--top-offset);
    left: 0;
    width: var(--star-tail-length);
    height: var(--star-tail-height);
    color: var(--star-color);
    background: linear-gradient(45deg, currentColor, transparent);
    border-radius: 50%;
    filter: drop-shadow(0 0 4px currentColor); // Reduced shadow blur
    transform: translate3d(104em, 0, 0);
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;

    @include sp-layout {
        animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
    }

    @for $i from 1 through $star-count {
        &:nth-child(#{$i}) {
            --star-tail-length: #{random_range(300em, 500em) / 100}; // Reduced range for better performance
            --top-offset: #{random_range(0vh, 10000vh) / 100};
            --fall-duration: #{random_range(12000, 24000s) / 1000};
            --fall-delay: #{random_range(0, 20000s) / 1000};
        }
    }

    &::before,
    &::after {
        position: absolute;
        content: '';
        top: 0;
        left: calc(var(--star-width) / -2);
        width: var(--star-width);
        height: 100%;
        background: linear-gradient(45deg, transparent, currentColor, transparent);
        border-radius: inherit;
        animation: blink 2s linear infinite;
    }

    &::before {
        transform: rotate(45deg);
    }

    &::after {
        transform: rotate(-45deg);
    }
}

@keyframes fall {
    to {
        transform: translate3d(-30em, 0, 0);
    }
}

@keyframes tail-fade {

    0%,
    50% {
        width: var(--star-tail-length);
        opacity: 1;
    }

    70%,
    80% {
        width: 0;
        opacity: 0.4;
    }

    100% {
        width: 0;
        opacity: 0;
    }
}

@keyframes blink {
    50% {
        opacity: 0.6;
    }
}